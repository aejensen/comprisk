model {
    for (i in 1:N) {
        for (j in offset[i]:(offset[i + 1] - 1)) {
            muy[j] <- inprod(betas[1:ncX], X[j, 1:ncX]) + inprod(b[i,
                1:ncZ], Z[j, 1:ncZ])
            y[j] ~ dnorm(muy[j], tau)
        }
        etaBaselineR[i] <- gammasR * WR[i]
        etaBaselineD[i] <- gammasD * WD[i]
        log.h0.TR[i] <- inprod(Bs.gammasR[1:(ncW2R)], W2R[i, 1:ncW2R])
        log.h0.TD[i] <- inprod(Bs.gammasD[1:(ncW2D)], W2D[i, 1:ncW2D])
        bB[i,1:nb] <- b[i,1:nb] + betas[1:nb]
        log.hazardR[i] <- log.h0.TR[i] + etaBaselineR[i] + inprod(alphasR[1:nb], bB[i,1:nb])
        log.hazardD[i] <- log.h0.TD[i] + etaBaselineD[i] + inprod(alphasD[1:nb], bB[i,1:nb])
        for (k in 1:K) {
            log.h0.sR[i, k] <- inprod(Bs.gammasR[1:(ncW2R)], W2sR[K *
                (i - 1) + k, 1:ncW2R])
            log.h0.sD[i, k] <- inprod(Bs.gammasD[1:(ncW2D)], W2sD[K *
                (i - 1) + k, 1:ncW2D])
            SurvLongR[i, k] <- wk[k] * exp(log.h0.sR[i, k] + inprod(alphasR[1:nb], bB[i,1:nb]))
            SurvLongD[i, k] <- wk[k] * exp(log.h0.sD[i, k] + inprod(alphasD[1:nb], bB[i,1:nb]))
} 
        log.survivalR[i] <- -exp(etaBaselineR[i]) * P[i] * sum(SurvLongR[i,])
        log.survivalD[i] <- -exp(etaBaselineD[i]) * P[i] * sum(SurvLongD[i,])
        phi[i] <- C - ((eventR[i] * log.hazardR[i]) + (eventD[i] * log.hazardD[i])) -
                 (log.survivalR[i] + log.survivalD[i])
        zeros[i] ~ dpois(phi[i])
        b[i, 1:nb] ~ dmnorm(mu0[], inv.D[,])
    }
    betas[1:ncX] ~ dmnorm(priorMean.betas[], priorTau.betas[,])
    tau ~ dgamma(priorA.tau, priorB.tau)
    sigma <- 1 / sqrt(tau)
    gammasR ~ dnorm(priorMean.gammas, priorTau.gammas)
    gammasD ~ dnorm(priorMean.gammas, priorTau.gammas)
    alphasR[1:nb] ~ dmnorm(priorMean.alphas[], priorTau.alphas[,])
    alphasD[1:nb] ~ dmnorm(priorMean.alphas[], priorTau.alphas[,])
    Bs.gammasR[1:(ncW2R)] ~ dmnorm(priorMean.Bs.gammas[], priorTau.Bs.gammas[,])
    Bs.gammasD[1:(ncW2D)] ~ dmnorm(priorMean.Bs.gammas[], priorTau.Bs.gammas[,])
    inv.D[1:nb, 1:nb] ~ dwish(priorR.D[, ], priorK.D)
    D[1:nb, 1:nb] <- inverse(inv.D[,])
} 
